{"version":3,"sources":["components/Container/index.jsx","components/Buttons/index.jsx","Pages/Main/index.jsx","components/BackArrow/index.jsx","Middleware/login.jsx","Pages/Login/index.jsx","Pages/Register/index.jsx","components/Checkbox/index.jsx","components/Radiobox/index.jsx","Pages/Diagnose-tool/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Container","children","rest","className","MainBtn","props","mainBtnText","Main","style","justifyContent","src","alt","to","specialClass","backgroundColor","BackArrow","service","newLoggedinUser","email","isTheUserLoggedIn","saveUserToLocalStorage","dataFromLocalStorage","localStorage","getItem","JSON","parse","push","setItem","stringify","alert","isValidUser","password","fetch","then","res","json","correctUsersList","filter","user","length","Error","getUtilities","Login","state","isFormClicked","isEmailValid","isPasswordValid","isLoginError","isLoginSuccess","handleInputChange","e","setState","target","name","value","isFormValid","includes","onClickSubmit","preventDefault","LoginCheck","catch","err","this","onSubmit","htmlFor","type","placeholder","id","onChange","color","Component","Register","CheckboxContainer","styled","div","Icon","svg","HiddenCheckbox","input","attrs","StyledCheckbox","checked","Checkbox","viewBox","points","Item","RadioButtonLabel","label","RadioButton","Radiobox","labelText","DiagnoseTool","cough","nodes","temperature","tonsillarex","radioAge","handleCheckboxChange","handleRadioboxChange","console","log","onButtonClick","calculate","addResult","theResult","counter","radiocounter","Object","keys","el","forEach","key","isDisabled","marginLeft","height","width","cursor","onClick","disabled","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e00b387a.chunk.js","sourcesContent":["import React from 'react';\nimport \"./container.scss\"\n\nconst Container = ({children,...rest}) => <div className=\"container\"><main {...rest} className=\"main\">{children}</main></div>;\n\n\n\nexport default Container;","import React from 'react';\nimport \"./button.scss\"\n\nconst MainBtn = props => {\n    const {mainBtnText} = props;\n    return (\n            <button className=\"main-btn\">\n                {mainBtnText}\n            </button>\n    )\n};\n\n\nexport default MainBtn;\n\n","import React from 'react';\nimport Container from \"../../components/Container\";\nimport MainBtn from \"../../components/Buttons\";\nimport {Link} from \"react-router-dom\"\n\n\nconst Main = () => {\n\n    const styles =  {\n        justifyContent: \"center\"\n    };\n    const specialClass  = {\n        backgroundColor: \"yellow\"\n    };\n\n\n    return (\n        <Container style={styles}>\n            <img src=\"images/virus.svg\" className=\"logo\" alt=\"logo\" />\n            <div className=\"login-register-buttons\">\n                        <Link to=\"/login\"><MainBtn mainBtnText=\"Log in\" /></Link>\n                        <Link to=\"/register\"><MainBtn mainBtnText=\"Register\" /></Link>\n            </div>\n            <Link to=\"/diagnose-tool\"><MainBtn mainBtnText=\"Continue without registration\" specialClass={specialClass} /></Link>\n        </Container>\n    )\n};\n\n\nexport default Main;","import React from 'react';\nimport \"./backarrow.scss\"\nimport {Link} from \"react-router-dom\";\n\nconst BackArrow = () => {\n    return (\n\n        <Link to=\"/\">\n            <button className=\"backarrow\">\n                <i className=\"icon-undo\" />\n            </button>\n        </Link>\n\n    )\n};\n\n\nexport default BackArrow;","\n\n//////////////\n// SAVE USER TO LOCAL STORAGE\n//////////////\n\n\n\n\nclass LoginCheck {\n    newLoggedinUser = {\n        email: \"\",\n        isTheUserLoggedIn: \"\"\n    };\n\n     saveUserToLocalStorage=(newLoggedinUser) =>{\n        let dataFromLocalStorage = [];\n        if (localStorage.getItem(\"loggedInUsers\") != null) {\n            dataFromLocalStorage = JSON.parse(localStorage.getItem(\"loggedInUsers\"));\n            dataFromLocalStorage.push(newLoggedinUser);\n            localStorage.setItem(\"loggedInUsers\", JSON.stringify(dataFromLocalStorage))\n        } else {\n            dataFromLocalStorage.push(newLoggedinUser);\n            localStorage.setItem(\"loggedInUsers\", JSON.stringify(dataFromLocalStorage));\n        }\n        alert(\"Zalogowany\");\n    };\n\n    isValidUser = (email, password) => {\n        return fetch('http://localhost:3005/users').then(\n            res => res.json()\n        ).then(res => {\n                const correctUsersList = res.filter(user => user.email === email && user.password === password);\n                if ( correctUsersList.length > 0) {\n                    this.newLoggedinUser.email = correctUsersList[0].email;\n                    this.newLoggedinUser.isTheUserLoggedIn = true;\n                    this.saveUserToLocalStorage(this.newLoggedinUser);\n\n                    return true\n                } else {\n                    throw new Error()\n                }\n            }\n        );\n    };\n\n    getUtilities = () => {\n        return { isValidUser: this.isValidUser }\n    }\n}\nconst service = new LoginCheck();\n\nexport default service.getUtilities();","import React, {Component} from 'react';\nimport \"./login.scss\"\nimport Container from \"../../components/Container\";\nimport BackArrow from \"../../components/BackArrow\";\nimport LoginCheck from \"../../Middleware/login\";\nimport { Redirect } from \"react-router-dom\";\n\n\n\n\nclass Login extends Component {\n    state = {\n        email: \"\",\n        password: \"\",\n        isFormClicked: false,\n        isEmailValid: true,\n        isPasswordValid: true,\n        isLoginError: \"\",\n        isLoginSuccess: false\n    };\n\n    handleInputChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    isFormValid = () => {\n        const { email, password } = this.state;\n        const isEmailValid = email.includes(\"@\") && email.length > 3;\n        const isPasswordValid = password.length > 3;\n        this.setState({ isEmailValid, isPasswordValid });\n        return isEmailValid && isPasswordValid\n    };\n\n    onClickSubmit = e => {\n        const { email, password } = this.state;\n        e.preventDefault();\n        const isFormValid = this.isFormValid();\n        if (isFormValid === true) {\n            this.setState({ isFormClicked:true });\n\n            LoginCheck.isValidUser(email, password).then(res => this.setState({isLoginSuccess:true}) ).catch(err => {\n                this.setState({isLoginError: \"Username or Password are wrong, please try again\"})\n            });\n        }\n    };\n\n\n\n\n\n    render() {\n        const { email, password, isPasswordValid, isEmailValid, isLoginError, isLoginSuccess } = this.state;\n\n        if (isLoginSuccess) {\n            return <Redirect to=\"/\" />\n        }\n\n        return (\n            <Container>\n                <BackArrow />\n\n                <form onSubmit={this.onClickSubmit} className=\"login-box\">\n                    <label htmlFor=\"input-email\">Enter your email</label>\n                    <input\n                        type=\"email\"\n                        placeholder=\"Your email address...\"\n                        name=\"email\"\n                        id=\"input-email\"\n                        value={email}\n                        onChange={this.handleInputChange}\n                    />\n\n                    <label htmlFor=\"input-password\">Enter your password</label>\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password...\"\n                        name=\"password\"\n                        id=\"input-password\"\n                        value={password}\n                        onChange={this.handleInputChange}\n                    />\n\n                    <small className=\"forgot-password-link\">Forgot password?</small>\n                    <button className=\"submit-btn\" type=\"submit\" >Log in</button>\n                </form>\n\n                {/*Print error message is at least email or Password are too short*/}\n                {\n                    (!isEmailValid || !isPasswordValid) &&\n                         <p style={{color:\"black\"}}>Email and/or password are too short or the email is not of a valid format. Try again.</p>\n                }\n\n                {this.state.isFormClicked &&\n                <div style={{color:\"black\"}}>\n                    <h1>Logging in...</h1>\n                </div>}\n\n                {\n                    (isLoginError) && <h2>{isLoginError}</h2>\n                }\n\n            </Container>\n        )\n    }\n}\n\n\nexport default Login;","import React from 'react';\nimport \"./register.scss\"\nimport BackArrow from \"../../components/BackArrow\";\nimport Container from \"../../components/Container\";\n\nconst Register = () => {\n\n    return (\n        <Container>\n            <BackArrow />\n            <form className=\"register-box\">\n                <label htmlFor=\"input-email\">Enter your email</label>\n                <input type=\"email\" placeholder=\"Ye not actually appending a string but an object which is incorrect and hence you get [Object Object]our email address...\" name=\"email\" id=\"input-email\" />\n                <label htmlFor=\"input-password\">Choose a password</label>\n                <input type=\"password\" placeholder=\"Password...\" name=\"password\" id=\"input-password\" />\n                <label htmlFor=\"input-password-repeat\">Repeat the password</label>\n                <input type=\"password\" placeholder=\"Repeat the password...\" name=\"password-repeat\" id=\"input-password-repeat\" />\n                <button className=\"submit-btn\">Submit</button>\n            </form>\n        </Container>\n    )\n};\n\n\nexport default Register;","import React from 'react';\nimport \"./checkbox.scss\"\nimport styled from \"styled-components\";\n\n\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n`;\n\nconst Icon = styled.svg`\n  fill: none;\n  stroke: white;\n  stroke-width: 2px;\n`;\n\n// Hide checkbox visually but remain accessible to screen readers.\n// Source: https://polished.js.org/docs/#hidevisually\nconst HiddenCheckbox = styled.input.attrs({ type: 'checkbox' })`\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`;\n\nconst StyledCheckbox = styled.div`\n  display: inline-block;\n  width: 30px;\n  height: 30px;\n  background: ${props => (props.checked ? 'salmon' : '#cc548e')}\n  border-radius: 3px;\n  transition: all 150ms;\n  margin-left: 5px;\n  cursor: pointer;\n\n  ${HiddenCheckbox}:focus + & {\n    box-shadow: 0 0 0 3px pink;\n  }\n\n  ${Icon} {\n    visibility: ${props => (props.checked ? 'visible' : 'hidden')}\n  }\n`;\n\nconst Checkbox = ({ className, checked, ...props }) => (\n    <CheckboxContainer className={className}>\n        <HiddenCheckbox checked={checked} {...props} />\n        <StyledCheckbox checked={checked}>\n            <Icon viewBox=\"0 0 24 24\">\n                <polyline points=\"20 6 9 17 4 12\" />\n            </Icon>\n        </StyledCheckbox>\n    </CheckboxContainer>\n);\n\n\n\n\nexport default Checkbox;","import React from 'react';\nimport \"./radiobox.scss\"\nimport styled from \"styled-components\";\n\n\n\nconst Radiobox = ({ name, labelText, ...props}) => (\n    <Item className=\"radioboxLabel\">\n        <RadioButton type=\"radio\" name={name} {...props} />\n        <RadioButtonLabel />\n        <div>{labelText}</div>\n    </Item>);\n\n\n\nconst Item = styled.div`\n  display: flex;\n  align-items: center;\n  height: 48px;\n  position: relative;\n`;\n\nconst RadioButtonLabel = styled.label`\n  position: absolute;\n  top: 25%;\n  right: 8px;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  background: #cc548e;\n  border: 1px solid #bebebe;\n`;\nconst RadioButton = styled.input`\n  opacity: 0;\n  z-index: 1;\n  border-radius: 50%;\n  width: 24px;\n  height: 24px;\n  margin-right: 10px;\n  right: 3px;\n    position: absolute;\n    cursor: pointer;\n  &:hover ~ ${RadioButtonLabel} {\n    background: #bebebe;\n    &::after {\n      content: \"\";\n      display: block;\n      border-radius: 50%;\n      width: 12px;\n      height: 12px;\n      margin: 6px;\n      background: #eeeeee;\n    }\n  }\n  &:checked + ${RadioButtonLabel} {\n    background: #db7290;\n    border: 1px solid #db7290;\n    &::after {\n      content: \"\";\n      display: block;\n      border-radius: 50%;\n      width: 12px;\n      height: 12px;\n      margin: 6px;\n      box-shadow: 1px 3px 3px 1px rgba(0, 0, 0, 0.1);\n      background: white;\n    }\n  }\n`;\n\n\n\nexport default Radiobox;","import React, {Component} from 'react';\nimport \"./diagnosetool.scss\"\nimport BackArrow from \"../../components/BackArrow\";\nimport Container from \"../../components/Container\";\nimport Checkbox from \"../../components/Checkbox\";\nimport Radiobox from \"../../components/Radiobox\";\n\n\n\n\nclass DiagnoseTool extends Component {\n    state = {\n        cough: false,\n        nodes: false,\n        temperature: false,\n        tonsillarex: false,\n        points: 0,\n        radioAge: \"\"\n    };\n\n// CHECKBOX\n    handleCheckboxChange = e => {\n        this.setState({\n            [e.target.name]: e.target.checked\n        }); // Setstate is Async, so I will give the address to the calculator as a 2nd argument to run it after the state has changed\n    };\n\n\n// RADIO\n    handleRadioboxChange = e => {\n        console.log(e.target.value);\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n// CALCULATE BUTTON CLICK\n    onButtonClick = e => {\n        e.preventDefault();\n        this.calculate();\n    };\n\n\n// ADD THE RESULT\n    addResult = () => {\n        let theResult;\n        // if (this.state.radioAge !== \"\") {\n            if (this.state.points <= 0 && this.state.radioAge) {\n                theResult =  <p>Risk of GABHS pharingitis <br/>1 to 2.5%</p>\n            } else if (this.state.points === 1) {\n                theResult =   <p>Risk of GABHS pharingitis <br/>5 to 10%</p>\n            } else if (this.state.points === 2) {\n                theResult =   <p>Risk of GABHS pharingitis <br/>11 tp 17%</p>\n            } else if (this.state.points === 3) {\n                theResult =   <p>Risk of GABHS pharingitis <br/>28 tp 35%</p>\n            } else if  (this.state.points >= 4) {\n                theResult =   <p>Risk of GABHS pharingitis <br/>51 to 53%</p>\n            }\n            return theResult;\n        // } else return null\n\n\n\n    };\n\n// PERRFORM THE CALCULATION\n    calculate = () => {\n        let counter = 0;\n        let radiocounter = 0;\n\n        Object.keys(this.state).filter(el => ['cough', 'nodes', 'temperature', 'tonsillarex'].includes(el)).forEach(key => {\n\n            // console.log(this.state[key]);\n            if (this.state[key] === true) {\n                counter += 1;\n            }\n        });\n\n        if (this.state.radioAge === \"age14\") {\n            radiocounter++\n        } else if (this.state.radioAge === \"age45\") {\n            radiocounter--\n        }\n\n        if (this.state.radioAge !== \"\") {\n            this.setState({\n                isDisabled: false\n            })\n        }\n\n        this.setState({\n            points: counter + radiocounter\n        });\n    };\n\n\n\n    render() {\n        const {cough, nodes, temperature, tonsillarex, radioAge} = this.state;\n        return (\n            <Container>\n                <BackArrow />\n                <div className=\"checkboxContainer\" style={{}}>\n\n                    <label className=\"checkboxLabel\">\n                        <span style={{marginLeft: 8}}>Absence of cough</span>\n                        <Checkbox\n                            name=\"cough\"\n                            checked={cough}\n                            onChange={this.handleCheckboxChange}\n                        />\n                    </label>\n\n                    <label className=\"checkboxLabel\">\n                        <span style={{marginLeft: 8}}>Anterior cervical nodes swollen or enlarged</span>\n                        <Checkbox\n                            name=\"nodes\"\n                            checked={nodes}\n                            onChange={this.handleCheckboxChange}\n                        />\n                    </label>\n\n                    <label className=\"checkboxLabel\">\n                        <span style={{marginLeft: 8}}>Temperature > 38&#8451; (100.4 &#8457;)</span>\n                        <Checkbox\n                            name=\"temperature\"\n                            checked={temperature}\n                            onChange={this.handleCheckboxChange}\n                        />\n                    </label>\n\n                    <label className=\"checkboxLabel\">\n                        <span style={{marginLeft: 8}}>Tonsillar exudates or swelling</span>\n                        <Checkbox\n                            name=\"tonsillarex\"\n                            checked={tonsillarex}\n                            onChange={this.handleCheckboxChange}\n                        />\n                    </label>\n\n\n                    {/*RADIO BOXES*/}\n                    <section className=\"radioWrapper\">\n                        <Radiobox\n                            onChange={this.handleRadioboxChange}\n                            name=\"radioAge\"\n                            labelText={\"Age: 3 to 14 years\"}\n                            checked={radioAge === 'age14'}\n                            value={'age14'}\n                        />\n                        <Radiobox\n                            onChange={this.handleRadioboxChange}\n                            name=\"radioAge\"\n                            labelText={\"Age: 15 to 44 years\"}\n                            checked={radioAge === 'age44'}\n                            value={'age44'}\n                        />\n                        <Radiobox\n                            onChange={this.handleRadioboxChange}\n                            name=\"radioAge\"\n                            labelText={\"Age: 45 years and older\"}\n                            checked={radioAge === 'age45'}\n                            value={'age45'}\n                        />\n                    </section>\n\n\n                    <p className=\"resultbox\">\n                    {\n                        (radioAge) && this.addResult()\n                    }\n                    </p>\n\n\n                    {/*{*/}\n                    {/*    (this.state.points <= 0 && radioAge) &&*/}\n                    {/*    <p className=\"checkboxLabel\">Risk of GABHS pharingitis 1 to 2.5%</p>*/}\n                    {/*}*/}\n                    {/*{*/}\n                    {/*    (this.state.points === 1) && <p className=\"checkboxLabel\">Risk of GABHS pharingitis 5 to 10%</p>*/}\n                    {/*}*/}\n                    {/*{*/}\n                    {/*    (this.state.points === 2) &&*/}\n                    {/*    <p className=\"checkboxLabel\">Risk of GABHS pharingitis 11 tp 17%</p>*/}\n                    {/*}*/}\n                    {/*{*/}\n                    {/*    (this.state.points === 3) &&*/}\n                    {/*    <p className=\"checkboxLabel\">Risk of GABHS pharingitis 28 tp 35%</p>*/}\n                    {/*}*/}\n                    {/*{*/}\n                    {/*    (this.state.points >= 4) && <p className=\"checkboxLabel\">Risk of GABHS pharingitis 51 to 53%</p>*/}\n                    {/*}*/}\n\n                </div>\n\n                <button\n                    style={{height: \"40px\", width: \"150px\", cursor:\"pointer\"}}\n                    type=\"submit\"\n                    className=\"calculateBtn\"\n                    onClick={this.onButtonClick}\n                    disabled={!radioAge}\n                >CALCULATE</button>\n\n\n            </Container>\n        )\n    }\n}\n\n\nexport default DiagnoseTool;","import React from 'react';\nimport './App.scss';\nimport {Switch, Route, BrowserRouter} from 'react-router-dom';\nimport Main from \"./Pages/Main\";\nimport Login from \"./Pages/Login\";\nimport Register from \"./Pages/Register\";\nimport DiagnoseTool from \"./Pages/Diagnose-tool\";\n\nfunction App() {\n\n\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/\"  component={Main} />\n                <Route path=\"/login\"  component={Login} />\n                <Route path=\"/register\"  component={Register} />\n                <Route path=\"/diagnose-tool\"  component={DiagnoseTool} />\n            </Switch>\n        </BrowserRouter>)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}